name: pantos-ethereum

networks:
  pantos-ethereum:
    driver: overlay
    name: pantos-ethereum
    attachable: true

services:
  eth:
    restart: always
    platform: linux/amd64
    image: pantosio/ethereum-node:${DOCKER_TAG-local}
    build:
      context: .
      dockerfile: Dockerfile
      target: blockchain-node
      x-bake:
        tags:
          - ${DOCKER_REGISTRY-pantosio}/ethereum-node:${DOCKER_TAG-local}
          - ${DOCKER_REGISTRY-pantosio}/ethereum-node:${EXTRA_TAG-local}
    networks:
      pantos-ethereum:
    environment:
      CHAIN_ID: 31337
    volumes:
      # Workaround so that we can also access the data locally
      # Without needing an additional container
      - eth-data:/data
      - ./data/eth:/data-static
    ports:
      - 8545:8545
    healthcheck:
      test: ["CMD-SHELL", "cast block-number"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
  bnb:
    restart: always
    platform: linux/amd64
    image: pantosio/ethereum-node:${DOCKER_TAG-local}
    build:
      context: .
      dockerfile: Dockerfile
      target: blockchain-node
      x-bake:
        tags:
          - ${DOCKER_REGISTRY-pantosio}/ethereum-node:${DOCKER_TAG-local}
          - ${DOCKER_REGISTRY-pantosio}/ethereum-node:${EXTRA_TAG-local}
    networks:
      pantos-ethereum:
    volumes:
      # Workaround so that we can also access the data locally
      # Without needing an additional container
      - bnb-data:/data
      - ./data/bnb:/data-static
    environment:
      CHAIN_ID: 31338
    ports:
      - 8546:8545
    healthcheck:
      test: ["CMD-SHELL", "cast block-number"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

volumes:
  eth-data:
    name: eth-data
  bnb-data:
    name: bnb-data
