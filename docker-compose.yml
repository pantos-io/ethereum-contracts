networks:
  pantos-ethereum:
    driver: overlay
    name: pantos-ethereum-${STACK_IDENTIFIER}-${INSTANCE-1}
    attachable: true

services:
  eth:
    restart: always
    image: pantosio/ethereum-node:${DOCKER_TAG-local}
    build:
      context: .
      dockerfile: Dockerfile
      target: blockchain-node
      x-bake:
        tags:
          - ${DOCKER_REGISTRY-pantosio}/ethereum-node:${DOCKER_TAG-local}
          - ${DOCKER_REGISTRY-pantosio}/ethereum-node:${EXTRA_TAG-local}
    networks:
      pantos-ethereum:
    ports:
      - 8545:8545
    environment:
      CHAIN: ethereum
    volumes:
      # Workaround so that we can also access the data locally
      # Without needing an additional container
    - type: volume
      source: eth-data
      target: /data
    healthcheck:
      test: ["CMD-SHELL", "cast block-number"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    develop:
      watch:
        - action: rebuild
          path: src
        - action: rebuild
          path: script
        - action: rebuild
          path: lib
        - action: rebuild
          path: deploy_chain.sh
        - action: rebuild
          path: remappings.txt
        - action: rebuild
          path: Dockerfile
        - action: sync+restart
          path: entrypoint.sh
          target: /root/entrypoint.sh
        - action: sync+restart
          path: docker-compose.yml
          target: /root/docker-compose.yml
  bnb:
    restart: always
    image: pantosio/ethereum-node:${DOCKER_TAG-local}
    build:
      context: .
      dockerfile: Dockerfile
      target: blockchain-node
      x-bake:
        tags:
          - ${DOCKER_REGISTRY-pantosio}/ethereum-node:${DOCKER_TAG-local}
          - ${DOCKER_REGISTRY-pantosio}/ethereum-node:${EXTRA_TAG-local}
    networks:
      pantos-ethereum:
    ports:
      - 8546:8545
    volumes:
      # Workaround so that we can also access the data locally
      # Without needing an additional container
    - type: volume
      source: bnb-data
      target: /data
    environment:
      CHAIN: bnb_chain
    healthcheck:
      test: ["CMD-SHELL", "cast block-number"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    develop:
      watch:
        - action: rebuild
          path: src
        - action: rebuild
          path: script
        - action: rebuild
          path: lib
        - action: rebuild
          path: deploy_chain.sh
        - action: rebuild
          path: remappings.txt
        - action: rebuild
          path: Dockerfile
        - action: sync+restart
          path: entrypoint.sh
          target: /root/entrypoint.sh
        - action: sync+restart
          path: docker-compose.yml
          target: /root/docker-compose.yml

volumes:
  eth-data:
    name: eth-data-${STACK_IDENTIFIER}-${INSTANCE-1}
  bnb-data:
    name: bnb-data-${STACK_IDENTIFIER}-${INSTANCE-1}
