name: Release Workflow
run-name: ${{ (github.event.release.prerelease && 'Beta') || 'Prod'}} Release for ${{ github.repository }} - ${{ github.event.release.tag_name }}
on:
  release:
    # Triggered on Pre-Releases and Releases
    types: [released, prereleased]

# Only allow one release at the time
concurrency:
  group: deploy-${{ github.repository }}-release-${{ github.event.release.prerelease }}

jobs:
  define-environment:
    name: Define Environment
    runs-on: ubuntu-latest
    if: (!github.event.release.draft)
    outputs:
      deployment_environment: ${{ steps.get-environment.outputs.deployment_environment }}
      deployment_longname: ${{ steps.get-environment.outputs.deployment_longname }}
      deployment_version: ${{ steps.get-environment.outputs.deployment_version }}
    steps:
      - name: Configure Environment
        id: get-environment
        run: |
          wget -O /usr/local/bin/semver https://raw.githubusercontent.com/fsaintjacques/semver-tool/master/src/semver
          chmod +x /usr/local/bin/semver
          if [[ $(semver validate ${{ github.event.release.tag_name }}) == "invalid" ]]; then
            echo "::error title=Invalid Release::Release must be tagged with a valid SemVer version"
            exit 1
          fi
          TAG=${{ github.event.release.tag_name }}
          echo "deployment_version=${TAG#v}" >> $GITHUB_OUTPUT
          if [[ "${{ github.event.release.prerelease }}" == "true" ]]; then
            echo "::notice title=Deployment Environment::Deployment for Test"
            echo "deployment_environment=-rc" >> $GITHUB_OUTPUT
            echo "deployment_longname=Beta" >> $GITHUB_OUTPUT
          else
            echo "::notice title=Deployment Environment::Deployment for Prod"
            echo "deployment_environment=" >> $GITHUB_OUTPUT
            echo "deployment_longname=Prod" >> $GITHUB_OUTPUT
          fi

  publish-docker:
    name: Publish docker image for ${{ needs.define-environment.outputs.deployment_longname }}
    needs: [define-environment]
    uses: ./.github/workflows/publish-docker.yaml
    secrets: 'inherit'
    with:
      tag: ${{ github.event.release.tag_name }}${{ needs.define-environment.outputs.deployment_environment }}
      architecture: amd64
      environment: dockerhub
      extra_tag: ${{ github.event.release.prerelease && 'beta' || 'latest' }}

  publish-docs:
    name: Publish Docs
    needs: [define-environment]
    uses: ./.github/workflows/publish-docs.yaml
    secrets: 'inherit'
    with:
      tag: ${{ github.event.release.tag_name }}
